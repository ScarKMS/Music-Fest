function navegacionFija(){const e=document.querySelector(".header");new IntersectionObserver((function(t){t[0].isIntersecting?e.classList.remove("fijo"):e.classList.add("fijo")})).observe(document.querySelector(".video"))}function scrollNav(){document.querySelectorAll(".navegacion-principal a").forEach((function(e){e.addEventListener("click",(function(e){e.preventDefault();document.querySelector(e.target.attributes.href.value).scrollIntoView({behavior:"smooth"})}))}))}function crearGaleria(){const e=document.querySelector(".galeria-imagenes");for(let t=1;t<=12;t++){const n=document.createElement("IMG");n.src=`build/img/thumb/${t}.webp`,n.dataset.imagenId=t,n.onclick=mostrarImagen;const o=document.createElement("LI");o.appendChild(n),e.appendChild(o)}}function mostrarImagen(e){const t=parseInt(e.target.dataset.imagenId),n=document.createElement("IMG");n.src=`build/img/grande/${t}.webp`;const o=document.createElement("DIV");o.appendChild(n),o.classList.add("overlay"),o.onclick=function(){o.remove(),a.classList.remove("fijar-body")};const c=document.createElement("P");c.textContent="X",c.classList.add("btn-cerrar"),c.onclick=function(){o.remove(),a.classList.remove("fijar-body")},o.appendChild(c);const a=document.querySelector("body");a.appendChild(o),a.classList.add("fijar-body")}document.addEventListener("DOMContentLoaded",(function(){scrollNav(),navegacionFija()})),document.addEventListener("DOMContentLoaded",(function(){crearGaleria()}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImdhbGVyaWEuanMiXSwibmFtZXMiOlsibmF2ZWdhY2lvbkZpamEiLCJiYXJyYSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwiZW50cmllcyIsImlzSW50ZXJzZWN0aW5nIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiYWRkIiwib2JzZXJ2ZSIsInNjcm9sbE5hdiIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZW5sYWNlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInRhcmdldCIsImF0dHJpYnV0ZXMiLCJocmVmIiwidmFsdWUiLCJzY3JvbGxJbnRvVmlldyIsImJlaGF2aW9yIiwiY3JlYXJHYWxlcmlhIiwiZ2FsZXJpYSIsImkiLCJpbWFnZW4iLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwiZGF0YXNldCIsImltYWdlbklkIiwib25jbGljayIsIm1vc3RyYXJJbWFnZW4iLCJsaXN0YSIsImFwcGVuZENoaWxkIiwiaWQiLCJwYXJzZUludCIsIm92ZXJsYXkiLCJib2R5IiwiY2VycmFySW1hZ2VuIiwidGV4dENvbnRlbnQiXSwibWFwcGluZ3MiOiJBQU1BLFNBQUFBLGlCQUVBLE1BQUFDLEVBQUFDLFNBQUFDLGNBQUEsV0FHQSxJQUFBQyxzQkFBQSxTQUFBQyxHQUNBQSxFQUFBLEdBQUFDLGVBQ0FMLEVBQUFNLFVBQUFDLE9BQUEsUUFFQVAsRUFBQU0sVUFBQUUsSUFBQSxXQUlBQyxRQUFBUixTQUFBQyxjQUFBLFdBR0EsU0FBQVEsWUFDQVQsU0FBQVUsaUJBQUEsMkJBQ0FDLFNBQUEsU0FBQUMsR0FDQUEsRUFBQUMsaUJBQUEsU0FBQSxTQUFBQyxHQUNBQSxFQUFBQyxpQkFDQWYsU0FBQUMsY0FBQWEsRUFBQUUsT0FBQUMsV0FBQUMsS0FBQUMsT0FDQUMsZUFBQSxDQUNBQyxTQUFBLGlCQ3pCQSxTQUFBQyxlQUNBLE1BQUFDLEVBQUF2QixTQUFBQyxjQUFBLHFCQUNBLElBQUEsSUFBQXVCLEVBQUEsRUFBQUEsR0FBQSxHQUFBQSxJQUFBLENBQ0EsTUFBQUMsRUFBQXpCLFNBQUEwQixjQUFBLE9BQ0FELEVBQUFFLElBQUEsbUJBQUFILFNBQ0FDLEVBQUFHLFFBQUFDLFNBQUFMLEVBR0FDLEVBQUFLLFFBQUFDLGNBRUEsTUFBQUMsRUFBQWhDLFNBQUEwQixjQUFBLE1BQ0FNLEVBQUFDLFlBQUFSLEdBQ0FGLEVBQUFVLFlBQUFELElBSUEsU0FBQUQsY0FBQWpCLEdBQ0EsTUFBQW9CLEVBQUFDLFNBQUFyQixFQUFBRSxPQUFBWSxRQUFBQyxVQUdBSixFQUFBekIsU0FBQTBCLGNBQUEsT0FDQUQsRUFBQUUsSUFBQSxvQkFBQU8sU0FFQSxNQUFBRSxFQUFBcEMsU0FBQTBCLGNBQUEsT0FDQVUsRUFBQUgsWUFBQVIsR0FDQVcsRUFBQS9CLFVBQUFFLElBQUEsV0FHQTZCLEVBQUFOLFFBQUEsV0FDQU0sRUFBQTlCLFNBQ0ErQixFQUFBaEMsVUFBQUMsT0FBQSxlQUlBLE1BQUFnQyxFQUFBdEMsU0FBQTBCLGNBQUEsS0FDQVksRUFBQUMsWUFBQSxJQUNBRCxFQUFBakMsVUFBQUUsSUFBQSxjQUdBK0IsRUFBQVIsUUFBQSxXQUNBTSxFQUFBOUIsU0FDQStCLEVBQUFoQyxVQUFBQyxPQUFBLGVBR0E4QixFQUFBSCxZQUFBSyxHQUdBLE1BQUFELEVBQUFyQyxTQUFBQyxjQUFBLFFBQ0FvQyxFQUFBSixZQUFBRyxHQUNBQyxFQUFBaEMsVUFBQUUsSUFBQSxjRHJEQVAsU0FBQWEsaUJBQUEsb0JBQUEsV0FDQUosWUFDQVgsb0JDRkFFLFNBQUFhLGlCQUFBLG9CQUFBLFdBQ0FTIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbigpIHtcclxuICAgIHNjcm9sbE5hdigpO1xyXG4gICAgbmF2ZWdhY2lvbkZpamEoKTtcclxufSk7XHJcblxyXG5cclxuZnVuY3Rpb24gbmF2ZWdhY2lvbkZpamEoKSB7XHJcblxyXG4gICAgY29uc3QgYmFycmEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyJyk7XHJcblxyXG4gICAgLy9SZWdpc3RyYXIgZWwgSW50ZXJzZWNjaW9uIE9ic2VydmVyXHJcbiAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihmdW5jdGlvbihlbnRyaWVzKSB7XHJcbiAgICAgICAgaWYgKGVudHJpZXNbMF0uaXNJbnRlcnNlY3RpbmcpIHtcclxuICAgICAgICAgICAgYmFycmEuY2xhc3NMaXN0LnJlbW92ZSgnZmlqbycpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGJhcnJhLmNsYXNzTGlzdC5hZGQoJ2Zpam8nKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIC8vRWxlbWVudG8gYSBPYnNlcnZhclxyXG4gICAgb2JzZXJ2ZXIub2JzZXJ2ZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudmlkZW8nKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNjcm9sbE5hdigpIHtcclxuICAgIGNvbnN0IGVubGFjZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubmF2ZWdhY2lvbi1wcmluY2lwYWwgYScpO1xyXG4gICAgZW5sYWNlcy5mb3JFYWNoKGZ1bmN0aW9uKGVubGFjZSkge1xyXG4gICAgICAgIGVubGFjZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBjb25zdCBzZWNjaW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihlLnRhcmdldC5hdHRyaWJ1dGVzLmhyZWYudmFsdWUpXHJcbiAgICAgICAgICAgIHNlY2Npb24uc2Nyb2xsSW50b1ZpZXcoe1xyXG4gICAgICAgICAgICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pXHJcbiAgICB9KTtcclxufSIsImRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbigpIHtcclxuICAgIGNyZWFyR2FsZXJpYSgpO1xyXG59KVxyXG5cclxuZnVuY3Rpb24gY3JlYXJHYWxlcmlhKCkge1xyXG4gICAgY29uc3QgZ2FsZXJpYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nYWxlcmlhLWltYWdlbmVzJyk7XHJcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8PSAxMjsgaSsrKSB7XHJcbiAgICAgICAgY29uc3QgaW1hZ2VuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnSU1HJyk7XHJcbiAgICAgICAgaW1hZ2VuLnNyYyA9IGBidWlsZC9pbWcvdGh1bWIvJHtpfS53ZWJwYDtcclxuICAgICAgICBpbWFnZW4uZGF0YXNldC5pbWFnZW5JZCA9IGk7XHJcblxyXG4gICAgICAgIC8vQcOxYWRpciBsYSBmdW5jaW9uIGRlIG1vc3RyYXJJbWFnZW5cclxuICAgICAgICBpbWFnZW4ub25jbGljayA9IG1vc3RyYXJJbWFnZW47XHJcblxyXG4gICAgICAgIGNvbnN0IGxpc3RhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnTEknKTtcclxuICAgICAgICBsaXN0YS5hcHBlbmRDaGlsZChpbWFnZW4pO1xyXG4gICAgICAgIGdhbGVyaWEuYXBwZW5kQ2hpbGQobGlzdGEpO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBtb3N0cmFySW1hZ2VuKGUpIHtcclxuICAgIGNvbnN0IGlkID0gcGFyc2VJbnQoZS50YXJnZXQuZGF0YXNldC5pbWFnZW5JZClcclxuXHJcbiAgICAvL1NlIGdlbmVyYSBsYSBpbWFnZW5cclxuICAgIGNvbnN0IGltYWdlbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ0lNRycpO1xyXG4gICAgaW1hZ2VuLnNyYyA9IGBidWlsZC9pbWcvZ3JhbmRlLyR7aWR9LndlYnBgO1xyXG5cclxuICAgIGNvbnN0IG92ZXJsYXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdESVYnKTtcclxuICAgIG92ZXJsYXkuYXBwZW5kQ2hpbGQoaW1hZ2VuKTtcclxuICAgIG92ZXJsYXkuY2xhc3NMaXN0LmFkZCgnb3ZlcmxheScpO1xyXG5cclxuICAgIC8vQ2VycmFyIGltYWdlbiBhbCBkYXIgY2xpY2tcclxuICAgIG92ZXJsYXkub25jbGljayA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIG92ZXJsYXkucmVtb3ZlKCk7XHJcbiAgICAgICAgYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdmaWphci1ib2R5Jyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9Cb3RvbiBwYXJhIGNlcnJhciBsYSBpbWFnZW5cclxuICAgIGNvbnN0IGNlcnJhckltYWdlbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ1AnKTtcclxuICAgIGNlcnJhckltYWdlbi50ZXh0Q29udGVudCA9ICdYJztcclxuICAgIGNlcnJhckltYWdlbi5jbGFzc0xpc3QuYWRkKCdidG4tY2VycmFyJyk7XHJcblxyXG4gICAgLy9BZ3JlZ2FuZG8gZnVuY2lvbiBwYXJhIGNlcnJhclxyXG4gICAgY2VycmFySW1hZ2VuLm9uY2xpY2sgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICBvdmVybGF5LnJlbW92ZSgpO1xyXG4gICAgICAgIGJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnZmlqYXItYm9keScpO1xyXG4gICAgfVxyXG5cclxuICAgIG92ZXJsYXkuYXBwZW5kQ2hpbGQoY2VycmFySW1hZ2VuKTtcclxuXHJcbiAgICAvL01vc3RyYXIgZW4gZWwgSFRNTFxyXG4gICAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcclxuICAgIGJvZHkuYXBwZW5kQ2hpbGQob3ZlcmxheSk7XHJcbiAgICBib2R5LmNsYXNzTGlzdC5hZGQoJ2ZpamFyLWJvZHknKTtcclxufSJdfQ==
